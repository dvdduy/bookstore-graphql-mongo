name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Backend Tests
  backend-tests:
    name: Backend Tests (.NET 9)
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET 9
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore BookStore/BookStore.sln
    
    - name: Build
      run: dotnet build BookStore/BookStore.sln --configuration Release --no-restore
    
    - name: Run Unit Tests
      run: dotnet test BookStore/BookStore.UnitTests/BookStore.UnitTests.csproj --configuration Release --no-build --verbosity normal
    
    - name: Run Integration Tests
      run: dotnet test BookStore/BookStore.IntegrationTests/BookStore.IntegrationTests.csproj --configuration Release --no-build --verbosity normal
      env:
        MongoDbConfiguration__ConnectionString: mongodb://localhost:27017
        MongoDbConfiguration__Database: BookStoreTestDB

  # Frontend Tests
  frontend-tests:
    name: Frontend Tests (Angular 18)
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: BookStore/client
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: BookStore/client/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run Tests
      run: npm test -- --watch=false --browsers=ChromeHeadless
    
    - name: Build Production
      run: npm run build -- --configuration production
